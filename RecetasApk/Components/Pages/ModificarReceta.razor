@page "/modificar-receta/{id:int}"
@using RecetasApk.Models
@using RecetasApk.Services
@using Microsoft.Maui.Storage
@inject Services.RecetaService RecetaService
@inject NavigationManager NavigationManager

<h3>Modificar Receta</h3>

@if (receta == null)
{    
    <p>Cargando receta...</p>
}
else
{
    <EditForm Model="receta" OnValidSubmit="GuardarCambios">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-3">
            <label for="nombre" class="form-label">Nombre</label>
            <input id="nombre" class="form-control" @bind="receta.Nombre" />
        </div>
        <div class="mb-3">
            <label for="ingredientes" class="form-label">Ingredientes</label>
            <textarea id="ingredientes" class="form-control" @bind="receta.Ingredientes"></textarea>
        </div>
        <div class="mb-3">
            <label for="instrucciones" class="form-label">Instrucciones</label>
            <textarea id="instrucciones" class="form-control" @bind="receta.Instrucciones"></textarea>
        </div>
        <div class="mb-3">
            <label class="form-label">Imagen</label>
            @if (!string.IsNullOrEmpty(receta.Imagen))
            {
                <div class="mt-2">
                    <img src="@receta.Imagen" alt="Imagen de la receta" class="img-fluid" style="max-width: 150px"/>
                </div>                 
            }
            <button type="button" class="btn btn-secondary" @onclick="TomarFoto">Tomar Foto</button>
        </div>

        <button type="submit" class="btn btn-success">Guardar cambios</button>
        <button type="button" class="btn btn-secondary ms-2" @onclick="VolverAPaginaPrincipal">Cancelar</button>
    </EditForm>
}

@code {
    [Parameter]
    public int id { get; set; }

    private RecetasApk.Models.Receta? receta;

    protected override async Task OnInitializedAsync()
    {
        receta = await RecetaService.GetRecetaAsync(id);

        if (receta == null)
        {
            Console.WriteLine($"No se encontró la receta con ID {id}.");
            return;
        }
    }

    private async Task GuardarCambios()
    {
        if (receta != null)
        {
            await RecetaService.SaveRecetaAsync(receta);
            NavigationManager.NavigateTo($"/ver-receta/{id}");
        }
    }

    private async Task TomarFoto()
    {
        if (receta is null)
        {
            Console.WriteLine("No hay receta cargada para modificar.");
            return;
        }

        try
        {
            //Verificar permiso para la camara
            var cameraPermissionStatus = await Permissions.CheckStatusAsync<Permissions.Camera>();
            if (cameraPermissionStatus != PermissionStatus.Granted)
            {
                cameraPermissionStatus = await Permissions.RequestAsync<Permissions.Camera>();
            }          

            if (MediaPicker.Default.IsCaptureSupported)
            {
                var photo = await MediaPicker.Default.CapturePhotoAsync(new MediaPickerOptions
                    {
                        Title = "Tomar foto para la receta"
                    });

                if (photo is not null)
                {
                    // Para almacenar la foto de forma permanente
                    var newFilePath = Path.Combine(FileSystem.AppDataDirectory, photo.FileName);
                    using (Stream stream = await photo.OpenReadAsync())
                    using (FileStream newStream = File.OpenWrite(newFilePath))
                    {
                        await stream.CopyToAsync(newStream);
                    }

                    var imageBytes = await File.ReadAllBytesAsync(newFilePath);
                    receta.Imagen = $"data:image/jpeg;base64,{Convert.ToBase64String(imageBytes)}";

                    // // Asigno la ruta a la receta (ya se comprobó que receta no es null)
                    // receta.Imagen = $"file://{newFilePath}";
                }
            }
            else
            {
                Console.WriteLine("Este dispositivo no soporta la captura de imagenes!");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error al tomar foto: {ex.Message}");
        }
    }

    private void VolverAPaginaPrincipal()
    {
        NavigationManager.NavigateTo($"/ver-receta/{id}");
    }
}